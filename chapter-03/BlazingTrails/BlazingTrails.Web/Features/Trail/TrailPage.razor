@page "/trails/{Id:int}"
@inject HttpClient Http

@if (_trail == null)
{
    <p>Loading trail...</p>
}
else
{
    <div class="card mb-3 mt-5">
        <div class="row no-gutters">
            <div class="col-md-5">
                <img src="@_trail.Image" class="card-img">
            </div>
            <div class="col-md-7">
                <div class="card-body">
                    <h2 class="card-title">@_trail.Name</h2>
                    <p class="card-text"><small class="text-muted">LOCATION</small><br /> @_trail.Location</p>
                    <p class="card-text"><small class="text-muted">ESTIMATED TIME</small><br /> @_trail.Time</p>
                    <p class="card-text"><small class="text-muted">LENGTH</small><br /> @_trail.Length km</p>
                </div>
            </div>
        </div>
    </div>

    <TabSet>
        <Tab Title="Description">
            <p>@_trail.Description</p>
        </Tab>
        <Tab Title="Route">
            <Table Items="_trail.Route">
                <Header>
                    <th>Stage</th>
                    <th>Description</th>
                </Header>
                <Row Context="routeInstruction">
                    <td>@routeInstruction.Stage</td>
                    <td>@routeInstruction.Description</td>
                </Row>
            </Table>
        </Tab>
    </TabSet>
}

@code {

    private Trail _trail;

    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var trails = await Http.GetFromJsonAsync<IEnumerable<Trail>>("trails/trail-data.json");
            _trail = trails.SingleOrDefault(_ => _.Id == Id);
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }
}
